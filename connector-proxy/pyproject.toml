[tool.poetry]
name = "connector-proxy-demo"
version = "0.1.0"
description = "An example showing how to use the Spiffworkflow-proxy's Flask Blueprint to make services available to Service Tasks."
authors = ["Dan <dan@sartography.com>"]
license = "LGPL"
readme = "README.md"
packages = [{include = "di", from = "."}]

[tool.poetry.dependencies]
python = "^3.11"
Flask = "^2.2.2"

# poetry source add --priority=supplemental iserv https://pypi.it-serv.dev/iserv/stable/+simple/ добавление репозитория

spiffworkflow-proxy = {git = "https://github.com/sartography/spiffworkflow-proxy"}

#connector-aws = {git = "https://github.com/sartography/connector-aws.git"}
#connector-http = {git = "https://github.com/sartography/connector-http.git"}
#connector-slack = {git = "https://github.com/sartography/connector-slack.git"}
#connector-smtp = {git = "https://github.com/sartography/connector-smtp.git"}
connector-example = {develop = true, path = "./connector-example" }
connector-sql = {develop = true, path = "./connector-sql" }

gunicorn = "^20.1.0"
dependency-injector = "^4.42.0"
#iserv-db-helpers = { version = "*", source = "iserv", extras = ["sqlalchemy", "pg"] }
#iserv-helpers-pytracelog = { version = "*", source = "iserv", extras = ["sqlalchemy"] }

[[tool.poetry.source]]
name = "iserv"
url = "https://pypi.it-serv.dev/iserv/stable/+simple/"
priority = "supplemental"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = [
  "."
]
